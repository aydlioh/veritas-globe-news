version: '3.8'

services:
  db:
    image: postgres:17
    container_name: postgres-db
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mydb
    ports:
      - '5432:5432'
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - app-network

  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    container_name: nest-backend
    environment:
      DATABASE_URL: postgres://user:password@db:5432/mydb
      S3_ACCESS_KEY: ${S3_ACCESS_KEY}
      S3_SECRET_KEY: ${S3_SECRET_KEY}
      S3_BUCKET_NAME: ${S3_BUCKET_NAME}
      S3_REGION: ${S3_REGION}
    ports:
      - '3001:3001'
    depends_on:
      - db
    networks:
      - app-network

  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    container_name: next-frontend
    ports:
      - '3000:3000'
    depends_on:
      - backend
    networks:
      - app-network

  nginx:
    build:
      context: .
      dockerfile: nginx/Dockerfile
    container_name: nginx-proxy
    ports:
      - '80:80'
    depends_on:
      - frontend
      - backend
    networks:
      - app-network

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - '9090:9090'
    networks:
      - app-network

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - '3000:3000'
    volumes:
      - grafana-data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - prometheus
    networks:
      - app-network

volumes:
  postgres-data:
  minio-data:
  grafana-data:

networks:
  app-network:
    driver: bridge
