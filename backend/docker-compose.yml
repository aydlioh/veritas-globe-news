version: '3.9'

services:
  postgres:
    image: postgres:latest
    container_name: postgres-db
    restart: always
    env_file:
      - ./.env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - '${POSTGRES_PORT}:${POSTGRES_PORT}'
    networks:
      - app-network

  backend:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: nest-backend
    env_file:
      - ./.env
    environment:
      POSTGRES_URI: ${POSTGRES_URI}
      NODE_ENV: ${NODE_ENV}
      COOKIE_DOMAIN: ${COOKIE_DOMAIN}
      JWT_SECRET: ${JWT_SECRET}
      JWT_ACCESS_TOKEN_TTL: ${JWT_ACCESS_TOKEN_TTL}
      JWT_REFRESH_TOKEN_TTL: ${JWT_REFRESH_TOKEN_TTL}
    volumes:
      - .:/app
      - /app/node_modules
    command: npm run start:dev
    ports:
      - '${PORT}:${PORT}'
    depends_on:
      - postgres
    networks:
      - app-network

  # redis:
  #   image: redis:7
  #   container_name: redis
  #   env_file:
  #     - ./.env
  #   volumes:
  #     - redis_data:/data
  #   ports:
  #     - '6379:6379'
  #   networks:
  #     - app-network

  minio:
    image: minio/minio
    container_name: minio
    command: server /data --console-address ":9001"
    env_file:
      - ./.env
    environment:
      MINIO_ROOT_USER: ${S3_ACCESS_KEY}
      MINIO_ROOT_PASSWORD: ${S3_SECRET_KEY}
    volumes:
      - minio_data:/data
    ports:
      - '9000:9000' # S3 API
      - '9001:9001' # Web UI
    networks:
      - app-network

volumes:
  postgres_data:
  redis_data:
  minio_data:

networks:
  app-network:
    driver: bridge
